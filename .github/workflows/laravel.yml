name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-development-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: music
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          ini-values: post_max_size=256M, max_execution_time=300
          tools: composer

      - name: Check PHP Version and Extensions
        run: |
          php -v
          php -m

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Validate .env File
        run: |
          if [ ! -f .env ]; then echo ".env file is missing"; exit 1; fi

      - name: Install Dependencies
        run: composer install --verbose

      - name: Generate Application Key
        run: php artisan key:generate --verbose

      - name: Set Directory Permissions
        run: sudo chmod -R 777 storage bootstrap/cache

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run Migrations and Seeders
        env:
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          DB_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DB_PASSWORD: ""
          APP_ENV: testing
        run: php artisan migrate:fresh --seed

      - name: Run Tests
        run: php artisan test --verbose
